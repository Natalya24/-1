package task2;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Scanner;

public class ClassA {

	public static void main(String[] args) throws IOException {
	//FileInputStream назначение — чтение байтов из файла.
		FileInputStream fis = new FileInputStream("D:\\1.txt"); 
		int i = 0;
		while((i = fis.read())!= -1) {
			System.out.print((char)i);
		}
		
	//FileOutputStream — запись байтов в файл.
		FileOutputStream fos = new FileOutputStream("D:\\1.txt"); 
		//Второй параметр boolean - перезаписывание
		String str = "\nSo close no matter how far\r\n"
				+ "Couldn't be much more from the heart";
		fos.write(str.getBytes());
	
	//BufferedInputStream считывает данные не по одному байту, а блоками и 
		//временно хранит их в специальном буфере. 
	//Он принимает на вход объект InputStream или любого его наследника, 
		//что предыдущий FileInputStream подойдет
		BufferedInputStream bis = new BufferedInputStream(fis, 200);
		int k = 0;
		while((k = bis.read())!= -1) {
			System.out.print((char)i);
		}
	
	//Класс BufferedWriter записывает текст в поток, предварительно буферизируя
		//записываемые символы, тем самым снижая количество обращений к физическому 
		//носителю для записи данных.
		try (BufferedWriter bw = new BufferedWriter(new FileWriter("D:\\2.txt"))) {
				String text = "Hello  World!\nHey! Ustu! Leave the kids alone.";
				bw.write(text);
			}
		catch(IOException ex){
	        System.out.println(ex.getMessage());
	    } 
		
	//Класс BufferedReader считывает текст из символьного потока ввода, буферизируя 
				//прочитанные символы.
		try (BufferedReader br = new BufferedReader (new FileReader("D:\\2.txt"))) {
				int c = 0;
				//посимвольно
				while ((c = br.read())!=-1) {
				//построчно while((s=br.readLine())!=null){
					  System.out.print((char)c);
				}
			}
		catch(IOException ex){
	        System.out.println(ex.getMessage());
	    } 
	
	//Считывание с консоли в файл
		try (BufferedReader br = new BufferedReader (new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new FileWriter("D:\\3.txt"))) {
			String text;
            while(!(text=br.readLine()).equals("ESC")){
            	
                bw.write(text + "\n");
                bw.flush();
            }
		} 
	
	//Класс Scanner
		Scanner in = new Scanner(System.in);
		int age = in.nextInt();
			
			System.out.println("Your number: " + age);
			
	//из строки
		String str2 = "10 20 40 60";
		Scanner scanner = new Scanner(str);
		      int a = scanner.nextInt();
		      int b = scanner.nextInt();

		System.out.println(a + b);      
	
	//обработка строк
		//Длина 
			System.out.println(str2.length());
		//Обращение к единственному элементу
			char ch;
			ch = "abc".charAt(1);
		//Получение более одного символа
			String s = "123";
			char buff[] = new char[2-0];
			s.getChars(0, 2, null, b);
			System.out.println(buff);
		//Альтернатива getBytes()
			//Строка в массив
			s.toCharArray();
		//equals() - сравнение!
		//compareTo() - сортировка по условию
		//indexOf() - первое вхождение символа или подстроки
		//LastIndexOf() - ищет последнее вхождение символа или подстроки
		//substring() - извлечение
		//concat() - соединение
		//replace() - замена
		//trim() - дубликат строки, без пробелов 
			
	//Класс StringTokenizer
		//Первый способ разбить строку на несколько частей — использовать метод split(). 
			//В него в качестве параметра нужно передать регулярное выражение: специальный 
			//шаблон строки-разделителя.
		
		String str3 = "Good news everyone!";
		String[] strings = str3.split("ne");
		System.out.println(Arrays.toString(strings));	
		
	//Класс StringTokenizer
		String str = "Good news everyone!";

		StringTokenizer tokenizer = new StringTokenizer(str,"ne");
		while (tokenizer.hasMoreTokens())
		{
		   String token = tokenizer.nextToken();
		   System.out.println(token);
		}
		
	//Метод String.format() и класс StringFormatter
		//format()
		String s2 = String.format("a=%3$d, b=%2$d, c=%d", 11, 12, 13);
		
 		System.out.println("\n\nТестовое сообщение!");
		System.out.print("1 2 3");
	}

}
